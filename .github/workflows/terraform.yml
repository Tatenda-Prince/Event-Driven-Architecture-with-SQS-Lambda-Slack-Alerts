name: Terraform CI/CD

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    name: Deploy Infrastructure with Terraform
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1
      TF_WORKING_DIR: ./terraform

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v3

      - name: 🔐 Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::970547345579:role/GitHubTerraformRole
          aws-region: ${{ env.AWS_REGION }}

      - name: 🐍 Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: 📦 Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('lambda/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: 🗜️ Package Lambda deployment
        working-directory: ./lambda
        run: |
          echo "📁 Validating Lambda build directory"
          test -f handler.py || { echo "❌ handler.py not found!"; exit 1; }
          test -f requirements.txt || { echo "❌ requirements.txt not found!"; exit 1; }

          echo "⬆️ Upgrading pip"
          pip install --upgrade pip

          echo "📦 Installing dependencies to current directory"
          pip install -r requirements.txt -t .

          echo "🗃 Zipping Lambda function and dependencies"
          zip -r ../terraform/lambda.zip . -x "*.pyc" "__pycache__/*"

      - name: 🔧 Set up Terraform CLI
        uses: hashicorp/setup-terraform@v3

      - name: 🌱 Terraform Init
        run: terraform init
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: 📐 Terraform Format Check
        run: terraform fmt -check -recursive
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: ✅ Terraform Validate
        run: terraform validate
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: 📋 Terraform Plan
        run: terraform plan -input=false
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: 🚀 Terraform Apply (main branch only)
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve -input=false
        working-directory: ${{ env.TF_WORKING_DIR }}
